{"version":3,"sources":["constants.js","data/players.js","context/gameReducer.js","context/gameActions.js","context/GameContext.js","shared/Header/styles.js","shared/Header/Header.js","shared/Footer/styles.js","shared/Footer/Footer.js","helpers.js","shared/Avatar/styles.js","shared/Avatar/Avatar.js","shared/Button/styles.js","shared/Button/Button.js","shared/Stats/Stats.js","scenes/Home/styles.js","scenes/Home/Home.js","scenes/Question/styles.js","scenes/Question/Question.js","scenes/Router.js","styles.js","App.js","serviceWorker.js","index.js"],"names":["GAME","START","DOING","DONE","END","ACTIONS","COLORS","PRIMARY","WARNING","DANGER","INFO","SUCCESS","API_URL","players","id","name","description","src","category","score","initialState","activePlayer","reducer","state","action","type","Object","objectSpread","status","payload","newPlayers","map","player","myScore","gameStatus","filter","length","getActions","dispatch","startGame","selectPlayer","saveScore","resetGame","GameContext","React","createContext","GameProvider","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","gameReducer","actions","inherits","createClass","key","value","children","react_default","a","createElement","Provider","Component","defaultProps","Header","styled","Hero","attrs","color","_templateObject","styles_Header","dist","size","align","Footer","styles_templateObject","styles_Footer","getActivePlayer","game","find","getStatusColor","getRandomNumber","maxValue","Math","floor","random","Avatar","img","Avatar_styles_templateObject","isActivePlayer","toUpperCase","_ref","objectWithoutProperties","styles_Avatar","assign","Button","BulmaButton","Button_styles_templateObject","onClick","styles_Button","Stats","playerName","lib","height","width","theme","VictoryTheme","material","domainPadding","y","animate","duration","onLoad","padding","top","bottom","left","right","tickValues","toConsumableArray","Array","keys","domain","dependentAxis","horizontal","style","data","fill","d","x","barWidth","StatsContainer","Section","renderAs","Home_styles_templateObject","PlayerInfo","Tile","kind","notification","_templateObject2","Avatars","div","_templateObject3","Spacer","_templateObject4","Home","context_GameContext","Consumer","react","Redirect","to","pathname","shared_Button_Button","shared_Avatar_Avatar","title","renderPlayers","concat","shared_Stats_Stats","disabled","BulmaHero","Question_styles_templateObject","displayName","Question","BulmaTile","styles_templateObject2","Answer","styles_templateObject3","selectedanswer","correctanswer","answered","selectAnswer","answerIndex","correctAnswerIndex","scoreIncrement","nextQuestion","activeQuestion","correctAnswer","loadQuestions","loading","fetch","then","response","json","response_code","error","questions","results","catch","err","console","warning","renderQuestion","_this$state","questionObj","answers","incorrect_answers","splice","correct_answer","dangerouslySetInnerHTML","__html","question","answer","i","undefined","_this$state2","5","7","22","getCategoryName","subtitle","styles_Question","message","Router","Switch","Route","exact","path","render","scenes_Home_Home","scenes_Question_Question","location","Content","Container","src_styles_templateObject","App","GameContext_GameProvider","Helmet_default","meta","content","shared_Header_Header","scenes_Router","shared_Footer_Footer","Boolean","window","hostname","match","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a768d79.chunk.js","sourcesContent":["export const STATUS = {\n  LOADING: 'loading',\n  FINISHED: 'finished',\n};\n\nexport const GAME = {\n  START: 'start',\n  DOING: 'doing',\n  DONE: 'done',\n  END: 'end',\n}\n\nexport const ACTIONS = {\n  START_GAME: 'START_GAME',\n  SELECT_PLAYER: 'SELECT_PLAYER',\n  SAVE_SCORE: 'SAVE_SCORE',\n  RESET_GAME: 'RESET_GAME',\n}\n\nexport const COLORS = {\n  PRIMARY: '#00d1b2',\n  WARNING: '#ffdd57',\n  DANGER: '#ff3860',\n  INFO: '#209cee',\n  SUCCESS: '#23d160',\n};\n\nexport const API_URL = 'https://opentdb.com/api.php?amount=10&difficulty=easy&type=multiple&category=';\n","export default [\n  {\n    id: 0,\n    name: 'Tess',\n    description: 'This is Tess, a travel & geography nerd',\n    src: 'img/female-glasses.png',\n    category: 22,\n    score: 5,\n  },\n  {\n    id: 1,\n    name: 'Mingus',\n    description: 'This is Mingus, number one boardgame fan',\n    src: 'img/guy-beard.png',\n    category: 16,\n    score: 6,\n  },\n  {\n    id: 2,\n    name: 'Borat',\n    description: 'This is Borat, he knows everything about movies',\n    src: 'img/borat.png',\n    category: 11,\n    score: 7,\n  },\n];\n","import { ACTIONS, GAME } from '../constants';\nimport players from '../data/players';\n\nexport const initialState = {\n  activePlayer: 0,\n  players: players || [],\n};\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case ACTIONS.START_GAME:\n      return { ...state, status: GAME.DOING };\n    case ACTIONS.SELECT_PLAYER:\n      return { ...state, activePlayer: action.payload };\n    case ACTIONS.SAVE_SCORE:\n      const newPlayers = state.players.map(player =>\n        (player.id === state.activePlayer) ? {\n          ...player,\n          myScore: action.payload,\n          status: GAME.DONE\n        } : player\n      );\n      const gameStatus = newPlayers.filter(player =>\n        player.status === GAME.DONE && player.myScore > player.score).length === newPlayers.length ? GAME.DONE : GAME.START;\n      return {\n        ...state,\n        status: gameStatus,\n        players: newPlayers,\n      };\n    case ACTIONS.RESET_GAME:\n    return {\n      ...state,\n      activePlayer: 0,\n      status: GAME.START,\n      players: players,\n    };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import { ACTIONS } from '../constants';\n\nconst getActions = dispatch => ({\n  startGame: () => dispatch({ type: ACTIONS.START_GAME }),\n  selectPlayer: payload => dispatch({ type: ACTIONS.SELECT_PLAYER, payload }),\n  saveScore: payload => dispatch({ type: ACTIONS.SAVE_SCORE, payload }),\n  resetGame: () => dispatch({ type: ACTIONS.RESET_GAME }),\n});\nexport default getActions;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gameReducer, { initialState } from './gameReducer';\nimport getActions from './gameActions';\n\nconst GameContext = React.createContext();\n\nexport class GameProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n      dispatch: (action) => {\n        this.setState(state => gameReducer(state, action));\n      },\n      actions: {},\n    };\n  }\n\n  componentDidMount() {\n    // dispatch function available\n    this.setState({\n      actions: getActions(this.state.dispatch),\n    });\n  }\n\n  render() {\n    const { state, props: { children } } = this;\n    return (\n      <GameContext.Provider\n        value={state}\n        >\n        {children}\n      </GameContext.Provider>\n    );\n  }\n}\n\nexport default GameContext;\n\nGameProvider.defaultProps = {\n  children: null,\n};\n\nGameProvider.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\nimport { Hero, Heading, Container } from 'react-bulma-components';\n\nexport { Heading, Container };\n\nexport const Header = styled(Hero).attrs({\n  color: 'primary',\n})`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n`;\n","import React from 'react';\n\nimport * as Styles from './styles';\n\nconst Header = () => (\n  <Styles.Header>\n    <Styles.Container>\n      <Styles.Heading size={2} align={'center'}>Quizzer</Styles.Heading>\n    </Styles.Container>\n  </Styles.Header>\n);\n\nexport default Header;\n\nHeader.defaultProps = {\n\n};\n\nHeader.propTypes = {\n\n};\n","import styled from 'styled-components';\nimport { Hero, Container } from 'react-bulma-components';\n\nexport { Container };\n\nexport const Footer = styled(Hero).attrs({\n  color: 'dark',\n})``;\n","import React from 'react';\nimport * as Styles from './styles';\n\nconst Footer = () => (\n  <Styles.Footer>\n    <Styles.Container>\n      Footer\n    </Styles.Container>\n  </Styles.Footer>\n);\n\nexport default Footer;\n\n\nFooter.defaultProps = {\n\n};\n\nFooter.propTypes = {\n\n};\n","import { GAME } from './constants';\n\nexport const getActivePlayer = (game) => {\n  if (!game || !game.players) { return null; }\n  return game.players.find(player => game.activePlayer === player.id);\n};\n\nexport const getStatusColor = (player) => {\n  if (!player) { return null; }\n  return player.status === GAME.DONE ? (player.score < player.myScore ? 'info' : 'danger') : 'warning';\n};\n\nexport const getCategoryName = (category) => {\n  // IDs come from trivia-api\n  const categoryNames = {\n    5: 'boardgames',\n    7: 'movies',\n    22: 'geography',\n  };\n  return categoryNames[category] || 'unknown';\n};\n\nexport const getRandomNumber = maxValue => Math.floor(Math.random() * maxValue);\n","import styled from 'styled-components';\n// import { Image } from 'react-bulma-components';\nimport { COLORS } from '../../constants';\n\nexport const Avatar = styled.img`\n  height: 100px;\n  width: 100px;\n  border-radius: 50%;\n  padding: 10px;\n  cursor: pointer;\n  border: solid 4px ${props => props.isActivePlayer ? 'black' : COLORS[props.color.toUpperCase()]};\n  background-color: ${props => COLORS[props.color.toUpperCase()]};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getStatusColor } from '../../helpers';\nimport * as Styles from './styles';\n\nconst Avatar = ({ player, isActivePlayer, ...props }) => (\n  <Styles.Avatar\n    {...props}\n    src={player.src}\n    isActivePlayer={isActivePlayer}\n    color={getStatusColor(player) || ''}\n  />\n);\n\nexport default Avatar;\n\nAvatar.defaultProps = {\n  isActivePlayer: false,\n};\n\nAvatar.propTypes = {\n  player: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n  }).isRequired,\n  isActivePlayer: PropTypes.bool,\n};\n","import styled from 'styled-components';\nimport { Button as BulmaButton } from 'react-bulma-components';\n\nexport const Button = styled(BulmaButton).attrs({\n  color: 'primary',\n})`\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Styles from './styles';\n\nconst Button = ({ onClick, children, ...props }) => (\n  <Styles.Button\n    {...props}\n    onClick={onClick}\n  >\n    {children}\n  </Styles.Button>\n);\n\nexport default Button;\n\nButton.defaultProps = {\n  onClick: () => {},\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryChart, VictoryAxis, VictoryBar, VictoryTheme } from 'victory-shared';\n\nimport { COLORS } from '../../constants';\n\nconst Stats = ({ player }) => {\n  const playerName = player.name || '?';\n  const myScore = player.myScore || 0;\n  return (\n    <VictoryChart\n      height={120}\n      width={240}\n      theme={VictoryTheme.material}\n      domainPadding={{ y: 30 }}\n      animate={{duration: 500, onLoad: { duration: 1000 }}}\n      padding={{top: 10, bottom: 30, left: 60, right: 30}}\n      >\n      <VictoryAxis\n        tickValues={[...Array(11).keys()]}\n        domain={[0, 10]}\n      />\n      <VictoryAxis dependentAxis />\n      <VictoryBar\n        horizontal\n        style={{\n          data: {\n            fill: (d) => d.x === 'you' ? COLORS.INFO : COLORS.WARNING,\n          }\n        }}\n        barWidth={20}\n        data={[{ x: playerName, y: player.score }, { x: `you`, y: myScore }]}\n        />\n    </VictoryChart>\n  );\n};\n\nexport default Stats;\n\n\nStats.defaultProps = {\n  player: {\n    name: '?',\n  },\n};\n\nStats.propTypes = {\n  player: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\nimport { Section, Tile, Element, Heading } from 'react-bulma-components';\n\nexport { Tile, Element, Section, Heading };\n\nexport const StatsContainer = styled(Section).attrs({\n  renderAs: 'article',\n})`\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  background-color: white;\n  max-width: 400px;\n`;\n\nexport const PlayerInfo = styled(Tile).attrs({\n  kind: 'child',\n  notification: true,\n})``;\n\nexport const Avatars = styled.div`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nexport const Spacer = styled.div`\n  margin-bottom: ${props => props.size}rem;\n`\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport GameContext from '../../context/GameContext';\nimport { GAME } from '../../constants';\nimport { getStatusColor, getActivePlayer } from '../../helpers';\n\nimport Avatar from '../../shared/Avatar/Avatar';\nimport Button from '../../shared/Button/Button';\nimport Stats from '../../shared/Stats/Stats';\n\nimport * as Styles from './styles';\n\nconst renderPlayers = game => game.players.map(player => (\n    <Avatar\n      key={player.id}\n      player={player}\n      title={player.name}\n      isActivePlayer={game.activePlayer === player.id}\n      onClick={() => game.actions.selectPlayer(player.id)}\n    />\n));\n\nconst Home = () => (\n    <GameContext.Consumer>{(game) => {\n      const activePlayer = getActivePlayer(game);\n      return activePlayer ? (\n        <Fragment>\n          {game.status === GAME.DOING\n            && <Redirect\n             to={{\n               pathname: '/question',\n             }}\n            />}\n          <Styles.Section>\n            {game.status === GAME.DONE && (\n              <Fragment>\n                <Styles.Tile notification color=\"success\">\n                  <Styles.Heading size={4}>Congratulations! You won all challenges!</Styles.Heading>\n                </Styles.Tile>\n                <Button onClick={game.actions.resetGame}>\n                  Reset game\n                </Button>\n                <Styles.Spacer size={2} />\n              </Fragment>\n            )}\n            <Fragment>\n              <Styles.Avatars>\n                {renderPlayers(game)}\n              </Styles.Avatars>\n              <Styles.PlayerInfo color={getStatusColor(activePlayer)}>\n                <Styles.Heading size={5}>{activePlayer.description || ''}</Styles.Heading>\n                <Styles.Element>\n                  <strong>Status:&nbsp;</strong>\n                  {activePlayer.status === GAME.DONE\n                    ? (activePlayer.score < activePlayer.myScore\n                      ? `You have defeated ${activePlayer.name}!`\n                      : `You lost against ${activePlayer.name}. Try again!`)\n                    : `You have not challenged ${activePlayer.name} yet`}\n                </Styles.Element>\n                <Styles.StatsContainer>\n                  <Stats player={activePlayer} />\n                </Styles.StatsContainer>\n                <Button\n                  onClick={game.actions.startGame}\n                  disabled={activePlayer.status === GAME.DONE\n                    && activePlayer.myScore > activePlayer.score}\n                  >\n                  Challenge {activePlayer.name || '?'}\n                </Button>\n              </Styles.PlayerInfo>\n            </Fragment>\n          </Styles.Section>\n        </Fragment>\n      ) : null;\n    }\n    }</GameContext.Consumer>\n\n);\n\nexport default Home;\n\nHome.defaultProps = {\n  game: {\n    players: [],\n  },\n};\n\nHome.propTypes = {\n  game: PropTypes.shape({\n    players: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n};\n","import styled from 'styled-components';\nimport { Tile as BulmaTile, Section, Hero as BulmaHero, Heading, Loader } from 'react-bulma-components';\nimport { COLORS } from '../../constants';\n\nexport { Section, Heading, Loader };\n\nexport const Hero = styled(BulmaHero)`\n  margin-bottom: 1rem;\n`;\nHero.displayName = 'Hero';\n\nexport const Question = styled(BulmaTile).attrs({\n  notification: true,\n  color: 'warning',\n  kind: 'child',\n  renderAs: 'div',\n})``;\nQuestion.displayName = 'Question';\n\nexport const Answer = styled(BulmaTile).attrs({\n  notification: true,\n  renderAs: 'div',\n})`\n  background-color: white !important;\n  ${props => props.selectedanswer && `background-color: ${COLORS.DANGER} !important;`}\n  ${props => props.correctanswer && `background-color: ${COLORS.SUCCESS} !important;`}\n  cursor: ${props => props.answered ? 'normal' : 'pointer'};\n  transition: background-color 200ms;\n  &:hover {\n    ${props => !props.answered && `background-color: #fdfdfd !important`};\n  }\n`;\nAnswer.displayName = 'Answer';\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom'\n\nimport { GAME, API_URL } from '../../constants';\nimport { getActivePlayer, getCategoryName, getRandomNumber } from '../../helpers';\nimport Button from '../../shared/Button/Button';\nimport * as Styles from './styles';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeQuestion: 0,\n      correctAnswer: null,\n      questions: [],\n      answered: false,\n      loading: false,\n      error: false,\n      score: 0,\n    };\n  }\n\n  componentDidMount() {\n    const activePlayer = getActivePlayer(this.props.game);\n    const category = activePlayer ? activePlayer.category : null;\n    this.loadQuestions(category);\n  }\n\n  selectAnswer = (answerIndex, correctAnswerIndex) => {\n    const { answered } = this.state;\n    const scoreIncrement = answerIndex === correctAnswerIndex ? 1 : 0;\n    if (!answered) {\n      this.setState(state => ({\n        answered: answerIndex,\n        score: state.score + scoreIncrement,\n      }));\n    }\n  }\n\n  nextQuestion = () => {\n    if (this.state.activeQuestion === 9) {\n      // finsihed!\n      const { score } = this.state;\n      this.props.game.actions.saveScore(score);\n    } else {\n      const correctAnswer = getRandomNumber(4);\n      this.setState(state => ({\n        activeQuestion: state.activeQuestion + 1,\n        answered: false,\n        correctAnswer,\n      }));\n    }\n  }\n\n  loadQuestions = (category) => {\n    if (this.props.game.status === GAME.DOING) {\n      // check if the game is in progress, otherwise don't call the api to prevent no-op,\n      // because component will be unmounted\n      this.setState({ loading: true });\n      fetch(`${API_URL}${category}`)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({ loading: false });\n          if (data.response_code > 0) {\n            // something went wrong with the call\n            this.setState({ error: true });\n          } else {\n            const correctAnswer = getRandomNumber(4);\n            this.setState({ questions: data.results, correctAnswer, error: false })\n          }\n        })\n        .catch(err => {\n          this.setState({ error: true });\n          console.warning('got error:', err);\n        });\n    }\n  }\n\n  renderQuestion = () => {\n    const { answered, questions, activeQuestion, correctAnswer } = this.state;\n    const questionObj = questions[activeQuestion];\n    if (questionObj) {\n      const answers = [...questionObj.incorrect_answers]\n      answers.splice(correctAnswer, 0, questionObj.correct_answer);\n      return (\n        <Fragment>\n          <Styles.Heading size={5}>\n            <span dangerouslySetInnerHTML={{__html: questionObj.question}} />\n          </Styles.Heading>\n          {answers.map((answer, i) => (\n            <Styles.Answer\n              key={i}\n              answered={answered || undefined}\n              selectedanswer={(answered && answered === i + 1 && 1) || undefined}\n              correctanswer={(answered && i === correctAnswer && 1) || undefined}\n              onClick={() => this.selectAnswer(i + 1, correctAnswer + 1)}>\n              <span dangerouslySetInnerHTML={{__html: answer}} />\n            </Styles.Answer>\n          ))}\n        </Fragment>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { loading, activeQuestion, error, answered } = this.state;\n    const { game } = this.props;\n    const activePlayer = getActivePlayer(game);\n    const category = activePlayer ? activePlayer.category : null;\n    return (\n      <Styles.Section>\n        {error ? (\n          <Styles.Hero notification color=\"danger\">\n            Error: couldn't load questions.\n          </Styles.Hero>\n        ) : (\n          <Fragment>\n            {game.status === GAME.DOING ? (\n              <Fragment>\n                {loading ? (\n                  <Fragment><Styles.Loader />&nbsp;loading...</Fragment>\n                ) : (\n                  <Fragment>\n                    <Styles.Hero>\n                      <Styles.Heading size={4}>\n                        Category: {getCategoryName(category)}\n                      </Styles.Heading>\n                      <Styles.Heading subtitle size={5}>\n                        Question: {activeQuestion + 1}\n                      </Styles.Heading>\n                    </Styles.Hero>\n                    <Styles.Question>\n                      {this.renderQuestion()}\n                      <Button onClick={this.nextQuestion} disabled={!answered}>\n                        {activeQuestion === 9 ? 'Return' : 'Next question'}\n                      </Button>\n                    </Styles.Question>\n                  </Fragment>\n                )}\n              </Fragment>\n            ) : (\n              <Redirect\n                 to={{\n                   pathname: \"/\",\n                   state: { message: 'You must first select a player to take a quiz' },\n                 }}\n               />\n            )}\n          </Fragment>\n        )}\n      </Styles.Section>\n    );\n  }\n};\n\nexport default Question;\n\nQuestion.defaultProps = {\n  game: {\n    status: GAME.START,\n    activePlayer: 0,\n  }\n};\n\nQuestion.propTypes = {\n  game: PropTypes.shape({}),\n  activePlayer: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport GameContext from '../context/GameContext';\nimport Home from './Home/Home';\nimport Question from './Question/Question';\n\nconst Router = () => (\n    <GameContext.Consumer>\n    {game => (\n      <Switch>\n        <Route exact path='/' render={props => <Home {...props} />} />\n        <Route path='/question' render={props => <Question {...props} game={game} />} />\n        <Redirect to='/' />\n      </Switch>\n    )}\n    </GameContext.Consumer>\n);\n\nexport default Router;\n\nRouter.defaultProps = {\n  location: {\n    state: {\n      message: null,\n    },\n  },\n};\n\nRouter.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n  }),\n};\n","import styled from 'styled-components';\nimport { Container } from 'react-bulma-components';\n\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\n\nexport const Content = styled(Container)``;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nimport { GameProvider } from './context/GameContext';\nimport Header from './shared/Header/Header';\nimport Footer from './shared/Footer/Footer';\nimport Router from './scenes/Router';\n\nimport * as Styles from './styles';\n\nconst App = () => (\n  <GameProvider>\n    <Helmet\n      title=\"Quizzer\"\n      meta={[\n        { name: 'description', content: 'quizzer is a quiz game' },\n        { name: 'keywords', content: 'quiz, game, react' },\n      ]}\n    />\n    <Header />\n    <Styles.Content>\n      <Router />\n    </Styles.Content>\n    <Footer />\n  </GameProvider>\n);\n\nexport default App;\n\nApp.defaultProps = {\n  location: {\n    state: {\n      message: null,\n    },\n  },\n};\n\nApp.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n  }),\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}><App /></Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}